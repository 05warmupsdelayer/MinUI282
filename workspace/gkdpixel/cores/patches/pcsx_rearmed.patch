diff --git a/Makefile.libretro b/Makefile.libretro
index 7ea7add..b0318a7 100644
--- a/Makefile.libretro
+++ b/Makefile.libretro
@@ -596,6 +596,19 @@ else ifneq (,$(findstring armv,$(platform)))
 	ARCH = arm
 	DYNAREC = ari64
 
+# GCW0
+else ifeq ($(platform), gcw0)
+	TARGET := $(TARGET_NAME)_libretro.so
+	CC = /opt/gcw0-toolchain/usr/bin/mipsel-linux-gcc
+	CXX = /opt/gcw0-toolchain/usr/bin/mipsel-linux-g++
+	fpic := -fPIC
+	CFLAGS += -fomit-frame-pointer -ffast-math -march=mips32 -mtune=mips32r2 -mhard-float
+	CFLAGS += -D_DINGUX -std=gnu99
+	ARCH = mips
+	BUILTIN_GPU = unai
+	DYNAREC = lightrec
+	HAVE_NEON = 0
+
 else ifeq ($(platform), miyoo)
 	TARGET := $(TARGET_NAME)_libretro.so
 	fpic := -fPIC
diff --git a/deps/lightrec/lightrec-private.h b/deps/lightrec/lightrec-private.h
index 5e047aa..e369723 100644
--- a/deps/lightrec/lightrec-private.h
+++ b/deps/lightrec/lightrec-private.h
@@ -57,11 +57,11 @@
 #define SET_DEFAULT_ELM(table, value) [0] = NULL
 #endif
 
-#if __has_attribute(__fallthrough__)
-#	define fallthrough	__attribute__((__fallthrough__))
-#else
+// #if __has_attribute(__fallthrough__)
+// #	define fallthrough	__attribute__((__fallthrough__))
+// #else
 #	define fallthrough	do {} while (0)  /* fallthrough */
-#endif
+// #endif
 
 #define container_of(ptr, type, member) \
 	((type *)((void *)(ptr) - offsetof(type, member)))
diff --git a/frontend/libretro-rthreads.c b/frontend/libretro-rthreads.c
index 90067b1..142254e 100644
--- a/frontend/libretro-rthreads.c
+++ b/frontend/libretro-rthreads.c
@@ -86,7 +86,8 @@ sthread_t *pcsxr_sthread_create(void (*thread_func)(void *),
 	h->id = (pthread_t)ctr_thread;
 #else
 	h = sthread_create(thread_func, NULL);
- #if defined(__GLIBC__) || \
+ #ifndef _DINGUX
+   #if defined(__GLIBC__) || \
     (defined(__ANDROID_API__) && __ANDROID_API__ >= 26)
 	if (h && (unsigned int)type < (unsigned int)PCSXRT_COUNT)
 	{
@@ -95,6 +96,7 @@ sthread_t *pcsxr_sthread_create(void (*thread_func)(void *),
 		};
 		pthread_setname_np(h->id, pcsxr_tnames[type]);
 	}
+   #endif
  #endif
 #endif
 	return h;
