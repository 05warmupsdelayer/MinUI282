known issues

WARNING! minarch is currently hardcoded to C scalers for RG353!

	trimuismart: low battery overlay isn't implemented yet
	trimuismart: faux rtc isn't implemented yet
	trimuismart: debug hud isn't available 
	trimuismart: missing L2/R2
	
	miyoomini: low battery overlay isn't implemented yet
	miyoomini: audio popping between launches
	miyoomini: prevent tearing strict introduces tearing :sob:
	miyoominiplus: doesn't always display installing/updating message
	
	rg353: clock will reset to gmt after returning to stock on wifi

all
	abstract away scaler selection
		move #include "scaler_neon.h" to individual "platform.c"s?
			but we still need to link ../common/scaler_neon.c
		add a generic scaler_t to defines.h
		#define GFX_getScaler PLAT_getScaler
		scaler_t PLAT_getScaler(int scale);
		but also think about how this will be handled in SDL2 
			which doesn't need scaling
		what if the entire video_refresh_callback() was platform specific? PLAT_scale(...);
	
	simple progress animation for installing/updating
		launch as a daemon with &
		draws in a corner
		kill after install/update complete
	main makefile
		targets have too many dependencies
	.tmp_update doesn't get updated?
		I think it does now? double check

	cores
		-
		
	minarch
		use C scalers on armv8 (they're fast enough and neon asm is different/incompatible with armv7)
		call core.run() (and maybe core.reset()) once before State_resume()?
				except core.reset() crashes PSX...
			will need to ignore audio, input, and video generated by that frame
		support hiding frontend options (by platform? could just be hardcoded into default.cfg)
		some aspect scaling isn't working correctly
			fceumm is ending up not-quite-native but also not the full aspect ratio
				something to do with PAGE_SIZE limitations?
				same for snes9x
			I think I should redo both scaler selectors
		doesn't pickup on core setting ratio changes? eg. fceumm
		support missing buttons with MENU+BUTTON? (smart)
	api
		GFX_blitDebug(text,x,y)?
			simple for everything but trimuismart with its -90Â° screen
	minui
		shows games in alt collated folders even if the alt pak isn't present...
			not sure how that's possible...
	add a "res" (or "many"?) folder 
		for install/update and charging gfx?
	show
	say
	confirm

rg353
	toolchain: patch buildroot SDL for POWER/PLUS/MINUS (see rg35xx)
	would love to get adbd working...
	overclocking
	additional cores
	rumble
	vsync
		appears to work
		lets setup our own double buffer so we can use it
	get latest MinUI/launch.sh from SD card

smart
	cores
		supa starfox perf bad
		pcsx freeze opening menu tekken 3
	sync rtc
		also sync rtc when saving (game or state) in minarch?
		what happens when two device you're swapping the sd card between disagree on datetime?
			what does that do to games that expect an RTC?

	what if led always flashed while sleeping (once the quicksave is created, then you know it's safe to poweroff)
		we don't have a hook into POW_fauxSleep to do that...unless we thread it 
			but that goes against the idea of an idle sleep state :sweat_smile:
	optimize text doesn't work with a rotated surface
		what if I only did rotation before scaling if dimensions are larger than fixed size?
	
	keymon
		battery/usb monitoring
			might be fine where it is
	update default.cfg that include bindings for L2/R2?
	battery overlay

miyoomini
	without a PLAT_vsync() menus use 95% cpu 
	there's a long delay before installing, add a preparing install graphic?
	distortion during resolution changes
	
	separate settings file for mini and plus
	
	prevent tearing modes are in conflict
		lenient has no tearing, flickering settings overlay
		strict has tearing, flicker-free settings overlay
	battery overlay
	update tearing defaults to strict for
		gba
		md
		???

miniplus
	-
	
rg35xx
	how to handle updating on mini and missing TF1 updates as a result?
		could I write the version to the .minstalled file
		if it doesn't match the current one run the installer
		trimui smart has a similar issue now
			the bootstrap folder updates /etc/main


rg35xx/install and miyoomini/install have png/bmp versions of the same files
	as do miyoomini/dat/ and rg35xx/ramdisk/

I think I might want to checkout a fresh copy of union-minui create a union branch delete everything in it and copy this into it (try as a single commit first and see how smart it is about moving things versus a delete and an add commit)
no, rename and archive the original union (union-prototype) and rename this to just union

README

have a verbose version and a short list version

---

1. makefile routes requests through makefile.toolchain
2. which clones the toolchain repo if necessary and
3. spins up a docker to run workspace/makefile build for each/the target platform
4. which builds commone elfs and punts to workspace/PLATFORM/makefile
5. which builds unique platform elfs

there's more to this now (eg. PLATFORM/makefile.copy)

---

potential mm+ identifier
	/customer/app/axp_test exists
	/miyoo354 instead of /miyoo

replace 
	git clone repo && cd repo && git checkout branch 
with
	git clone --depth 1 --branch branch repo
note: doesn't work with commits only branches

---

https://discord.com/invite/p4uRmCd